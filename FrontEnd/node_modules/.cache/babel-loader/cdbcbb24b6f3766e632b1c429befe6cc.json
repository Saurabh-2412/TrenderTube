{"ast":null,"code":"import uuid from \"react-uuid\";\nexport const playlistReducer = (state, action) => {\n  switch (action.type) {\n    case \"INITIAL_LOAD\":\n      return { ...state,\n        playList: action.payload\n      };\n\n    case \"SHOW_PLAYLIST_MODAL\":\n      return { ...state,\n        showPlaylistModal: { ...state.showPlaylistModal,\n          status: state.showPlaylistModal.status === false ? true : false,\n          videoData: action.payload === undefined ? \"\" : action.payload\n        }\n      };\n\n    case \"DISPLAY_INPUT_BOX\":\n      return { ...state,\n        inputPlaylistBox: state.inputPlaylistBox === false ? true : false\n      };\n\n    case \"CREATE_PLAY_LIST\":\n      console.log(action.payload);\n      return { ...state,\n        playList: action.payload //playList: [ ...state.playList, {id:action.payload.id, name:action.payload.name, videos:[]} ]\n\n      };\n\n    case \"SAVE_TO_PLAYLIST\":\n      return { ...state,\n        playList: state.playList.map(playlistItem => {\n          if (playlistItem.id === action.playlistId) {\n            return { ...playlistItem,\n              videos: playlistItem.videos.find(playlistVideo => playlistVideo === action.payload.videoId) ? playlistItem.videos.filter(playlistVideo => playlistVideo !== action.payload) : [...playlistItem.videos, action.payload]\n            };\n          }\n\n          return playlistItem;\n        })\n      };\n\n    case \"REMOVE_FROM_PLAYLIST\":\n      return { ...state,\n        playList: state.playList.map(playlistItem => {\n          if (playlistItem.id === action.playlistId) {\n            return { ...playlistItem,\n              videos: playlistItem.videos.filter(playlistVideo => playlistVideo !== action.payload)\n            };\n          }\n\n          return playlistItem;\n        })\n      };\n\n    case \"DELETE_PLAYLIST\":\n      return { ...state,\n        playList: state.playList.filter(playlistitem => playlistitem.id === action.playlistId)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["E:/NeogCampProjects/LevelOneProjects/Video-Library/video-library-app/src/Reducer/playListReducer.js"],"names":["uuid","playlistReducer","state","action","type","playList","payload","showPlaylistModal","status","videoData","undefined","inputPlaylistBox","console","log","map","playlistItem","id","playlistId","videos","find","playlistVideo","videoId","filter","playlistitem"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELG,QAAAA,QAAQ,EAACF,MAAM,CAACG;AAFX,OAAP;;AAKF,SAAK,qBAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELK,QAAAA,iBAAiB,EAAE,EACjB,GAAGL,KAAK,CAACK,iBADQ;AAEjBC,UAAAA,MAAM,EAAEN,KAAK,CAACK,iBAAN,CAAwBC,MAAxB,KAAmC,KAAnC,GAA2C,IAA3C,GAAkD,KAFzC;AAGjBC,UAAAA,SAAS,EAAEN,MAAM,CAACG,OAAP,KAAmBI,SAAnB,GAA+B,EAA/B,GAAoCP,MAAM,CAACG;AAHrC;AAFd,OAAP;;AASF,SAAK,mBAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELS,QAAAA,gBAAgB,EAAET,KAAK,CAACS,gBAAN,KAA2B,KAA3B,GAAmC,IAAnC,GAA0C;AAFvD,OAAP;;AAKF,SAAK,kBAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACG,OAAnB;AACA,aAAO,EACL,GAAGJ,KADE;AAELG,QAAAA,QAAQ,EAAEF,MAAM,CAACG,OAFZ,CAGL;;AAHK,OAAP;;AAMF,SAAK,kBAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeS,GAAf,CAAoBC,YAAD,IAAkB;AAC7C,cAAIA,YAAY,CAACC,EAAb,KAAoBb,MAAM,CAACc,UAA/B,EAA2C;AACzC,mBAAO,EACL,GAAGF,YADE;AAELG,cAAAA,MAAM,EAAEH,YAAY,CAACG,MAAb,CAAoBC,IAApB,CACLC,aAAD,IAAmBA,aAAa,KAAKjB,MAAM,CAACG,OAAP,CAAee,OAD9C,IAEJN,YAAY,CAACG,MAAb,CAAoBI,MAApB,CACGF,aAAD,IAAmBA,aAAa,KAAKjB,MAAM,CAACG,OAD9C,CAFI,GAIJ,CAAC,GAAGS,YAAY,CAACG,MAAjB,EAAyBf,MAAM,CAACG,OAAhC;AANC,aAAP;AAQD;;AACD,iBAAOS,YAAP;AACD,SAZS;AAFL,OAAP;;AAiBF,SAAK,sBAAL;AACE,aAAO,EACL,GAAGb,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeS,GAAf,CAAoBC,YAAD,IAAkB;AAC7C,cAAIA,YAAY,CAACC,EAAb,KAAoBb,MAAM,CAACc,UAA/B,EAA2C;AACzC,mBAAO,EACL,GAAGF,YADE;AAELG,cAAAA,MAAM,EAAEH,YAAY,CAACG,MAAb,CAAoBI,MAApB,CACLF,aAAD,IAAmBA,aAAa,KAAKjB,MAAM,CAACG,OADtC;AAFH,aAAP;AAKD;;AACD,iBAAOS,YAAP;AACD,SATS;AAFL,OAAP;;AAcF,SAAK,iBAAL;AACE,aAAO,EACL,GAAGb,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeiB,MAAf,CAAuBC,YAAD,IAAkBA,YAAY,CAACP,EAAb,KAAoBb,MAAM,CAACc,UAAnE;AAFL,OAAP;;AAKF;AACE,aAAOf,KAAP;AAvEJ;AAyED,CA1EM","sourcesContent":["import uuid from \"react-uuid\";\r\nexport const playlistReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INITIAL_LOAD\":\r\n      return {\r\n        ...state,\r\n        playList:action.payload\r\n      }\r\n\r\n    case \"SHOW_PLAYLIST_MODAL\":\r\n      return {\r\n        ...state,\r\n        showPlaylistModal: {\r\n          ...state.showPlaylistModal,\r\n          status: state.showPlaylistModal.status === false ? true : false,\r\n          videoData: action.payload === undefined ? \"\" : action.payload,\r\n        }\r\n      };\r\n    \r\n    case \"DISPLAY_INPUT_BOX\":\r\n      return {\r\n        ...state,\r\n        inputPlaylistBox: state.inputPlaylistBox === false ? true : false,\r\n      };\r\n\r\n    case \"CREATE_PLAY_LIST\":\r\n      console.log(action.payload); \r\n      return {\r\n        ...state,\r\n        playList: action.payload\r\n        //playList: [ ...state.playList, {id:action.payload.id, name:action.payload.name, videos:[]} ]\r\n      };\r\n\r\n    case \"SAVE_TO_PLAYLIST\":\r\n      return {\r\n        ...state,\r\n        playList: state.playList.map((playlistItem) => {\r\n          if (playlistItem.id === action.playlistId) {\r\n            return {\r\n              ...playlistItem,\r\n              videos: playlistItem.videos.find(\r\n                (playlistVideo) => playlistVideo === action.payload.videoId)\r\n                ? playlistItem.videos.filter(\r\n                    (playlistVideo) => playlistVideo !== action.payload)\r\n                : [...playlistItem.videos, action.payload],\r\n            };\r\n          }\r\n          return playlistItem;\r\n        }), \r\n      };\r\n\r\n    case \"REMOVE_FROM_PLAYLIST\":\r\n      return {\r\n        ...state,\r\n        playList: state.playList.map((playlistItem) => {\r\n          if (playlistItem.id === action.playlistId) {\r\n            return {\r\n              ...playlistItem,\r\n              videos: playlistItem.videos.filter(\r\n                (playlistVideo) => playlistVideo !== action.payload)\r\n            };\r\n          }\r\n          return playlistItem;\r\n        }), \r\n      };\r\n\r\n    case \"DELETE_PLAYLIST\":\r\n      return {\r\n        ...state,\r\n        playList: state.playList.filter((playlistitem) => playlistitem.id === action.playlistId)\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"E:\\\\NeogCampProjects\\\\LevelOneProjects\\\\Video-Library\\\\video-library-app\\\\src\\\\Component\\\\PlayList\\\\PlaylistModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { usePlaylist } from \"../../Contexter/playListContext\";\nimport axios from \"axios\";\nimport \"../../App.css\";\nimport { PlaylistHeader } from \"./PlaylistHeader\";\nimport { CreatePlaylistInput } from \"./CreatePlaylistInput\";\nimport { CreatePlaylist } from \"./CreatePlaylist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PlaylistModal = ({\n  VideoData\n}) => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const {\n    playList,\n    playlistId,\n    inputPlaylistBox,\n    showPlaylistModal,\n    dispatchplaylist\n  } = usePlaylist(); //loading playlist\n\n  useEffect(() => {\n    (async function () {\n      const {\n        data\n      } = await axios.get(\"https://VideoLibraryData.saurabhsharma11.repl.co/v1/playlistVideos\"); //console.log(\"initial load\",data)\n\n      dispatchplaylist({\n        type: \"INITIAL_LOAD\",\n        payload: data.playlist\n      });\n    })();\n  }, []);\n\n  async function handlePlaylistCheckbox(e, item) {\n    let listId = e.target.id;\n\n    if (e.target.checked === true) {\n      const {\n        data\n      } = await axios.post(`https://VideoLibraryData.saurabhsharma11.repl.co/v1/playlistVideos/${item._id}`, {\n        playlistVideoItem: VideoData.videoId,\n        action: \"push\"\n      });\n      dispatchplaylist({\n        type: \"SAVE_TO_PLAYLIST\",\n        payload: data.updatedPlaylist\n      });\n      dispatchplaylist({\n        type: \"SHOW_PLAYLIST_MODAL\"\n      });\n    } else {\n      const {\n        data\n      } = await axios.post(`https://VideoLibraryData.saurabhsharma11.repl.co/v1/playlistVideos/${item._id}`, {\n        playlistVideoItem: VideoData.videoId,\n        action: \"pull\"\n      });\n      dispatchplaylist({\n        type: \"REMOVE_FROM_PLAYLIST\",\n        payload: data.updatedPlaylist\n      });\n      dispatchplaylist({\n        type: \"SHOW_PLAYLIST_MODAL\"\n      });\n    }\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `modal ${showPlaylistModal.status === false ? \"modal-hide\" : \"modal-show\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal--window\",\n      children: [/*#__PURE__*/_jsxDEV(PlaylistHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal--content\",\n        children: [/*#__PURE__*/_jsxDEV(CreatePlaylist, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }, this), playList.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"playlist-names\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: \"playlist-item\",\n                className: \"playlist-checkbox\",\n                id: item._id,\n                checked: item.playlistvideo.some(playlistVideo => playlistVideo === VideoData.videoId) ? true : false,\n                onChange: e => handlePlaylistCheckbox(e, item)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: item._id,\n                children: item.playlistName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 29\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 23\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(CreatePlaylistInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n};\n\n_s(PlaylistModal, \"RslfJitWW/W4/mmgdeyruCi9Mjw=\", false, function () {\n  return [usePlaylist];\n});\n\n_c = PlaylistModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaylistModal\");","map":{"version":3,"sources":["E:/NeogCampProjects/LevelOneProjects/Video-Library/video-library-app/src/Component/PlayList/PlaylistModal.js"],"names":["React","useState","useEffect","usePlaylist","axios","PlaylistHeader","CreatePlaylistInput","CreatePlaylist","PlaylistModal","VideoData","text","setText","playList","playlistId","inputPlaylistBox","showPlaylistModal","dispatchplaylist","data","get","type","payload","playlist","handlePlaylistCheckbox","e","item","listId","target","id","checked","post","_id","playlistVideoItem","videoId","action","updatedPlaylist","status","map","playlistvideo","some","playlistVideo","playlistName"],"mappings":"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","sourcesContent":["import React,{ useState,useEffect } from \"react\";\r\nimport { usePlaylist } from \"../../Contexter/playListContext\";\r\nimport axios from \"axios\";\r\nimport \"../../App.css\";\r\nimport { PlaylistHeader } from \"./PlaylistHeader\";\r\nimport { CreatePlaylistInput } from \"./CreatePlaylistInput\";\r\nimport { CreatePlaylist } from \"./CreatePlaylist\";\r\n\r\nexport const PlaylistModal = ({ VideoData }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const {\r\n    playList,\r\n    playlistId,\r\n    inputPlaylistBox,\r\n    showPlaylistModal,\r\n    dispatchplaylist,\r\n  } = usePlaylist();\r\n  \r\n  //loading playlist\r\n  useEffect(() => {\r\n    (async function () {\r\n      const { data } = await axios.get(\r\n        \"https://VideoLibraryData.saurabhsharma11.repl.co/v1/playlistVideos\"\r\n      );\r\n      //console.log(\"initial load\",data)\r\n      dispatchplaylist({ type: \"INITIAL_LOAD\", payload: data.playlist });\r\n    })();\r\n  },[]);\r\n\r\n  async function handlePlaylistCheckbox(e,item) {\r\n    let listId = e.target.id;\r\n    if (e.target.checked === true) {\r\n      const { data } = await axios.post(\r\n        `https://VideoLibraryData.saurabhsharma11.repl.co/v1/playlistVideos/${item._id}`,\r\n        {playlistVideoItem:VideoData.videoId,action:\"push\"});\r\n      dispatchplaylist({type: \"SAVE_TO_PLAYLIST\",payload: data.updatedPlaylist});\r\n      dispatchplaylist({ type: \"SHOW_PLAYLIST_MODAL\" })\r\n    } else {\r\n      const { data } = await axios.post(\r\n        `https://VideoLibraryData.saurabhsharma11.repl.co/v1/playlistVideos/${item._id}`,\r\n        {playlistVideoItem:VideoData.videoId,action:\"pull\"});\r\n      dispatchplaylist({type: \"REMOVE_FROM_PLAYLIST\", payload: data.updatedPlaylist});\r\n      dispatchplaylist({ type: \"SHOW_PLAYLIST_MODAL\" })\r\n    }\r\n  };\r\n\r\n  return (\r\n      <div className={`modal ${showPlaylistModal.status === false ? \"modal-hide\" : \"modal-show\"}`}>\r\n          <div className=\"modal--window\">\r\n\r\n              <PlaylistHeader/>\r\n              \r\n              <div className=\"modal--content\">\r\n                  {/** playlist creation */}\r\n                  <CreatePlaylist/>\r\n\r\n                  {/** playlist checkbox */}\r\n                  {playList.map((item) => {\r\n                    return (\r\n                      <div>\r\n                        <div key={item._id} className=\"playlist-names\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              name=\"playlist-item\"\r\n                              className=\"playlist-checkbox\"\r\n                              id={item._id}\r\n                              checked={\r\n                                item.playlistvideo.some(\r\n                                  (playlistVideo) => playlistVideo === VideoData.videoId\r\n                                )\r\n                                  ? true\r\n                                  : false\r\n                              }\r\n                              onChange={(e) => handlePlaylistCheckbox(e,item)}\r\n                            />\r\n                            <label htmlFor={item._id}>{item.playlistName}</label>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n\r\n              <CreatePlaylistInput/>\r\n          </div>\r\n      </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}
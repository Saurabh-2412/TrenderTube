{"ast":null,"code":"import uuid from \"react-uuid\";\nexport const playlistReducer = (state, action) => {\n  switch (action.type) {\n    case \"INITIAL_LOAD\":\n      return { ...state,\n        playList: action.payload\n      };\n\n    case \"SHOW_PLAYLIST_MODAL\":\n      return { ...state,\n        showPlaylistModal: { ...state.showPlaylistModal,\n          status: state.showPlaylistModal.status === false ? true : false,\n          videoData: action.payload === undefined ? \"\" : action.payload\n        }\n      };\n\n    case \"DISPLAY_INPUT_BOX\":\n      return { ...state,\n        inputPlaylistBox: state.inputPlaylistBox === false ? true : false\n      };\n\n    case \"CREATE_PLAY_LIST\":\n      console.log(action.payload);\n      return { ...state,\n        playList: [...state.playList, {\n          _id: action.payload._id,\n          playlistName: action.payload.playlistName,\n          playlistvideo: action.payload.playlistvideo\n        }]\n      };\n\n    case \"SAVE_TO_PLAYLIST\":\n      const updatePlaylist = state.playList.map(element => {\n        if (element._id === action.payload._id) {\n          return { ...element,\n            playlistvideo: action.payload.playlistvideo\n          };\n        } else {\n          return element;\n        }\n      });\n      return { ...state,\n        playList: updatePlaylist\n        /* playList: state.playList.map((playlistItem) => {\r\n          if (playlistItem.id === action.playlistId) {\r\n            return {\r\n              ...playlistItem,\r\n              videos: playlistItem.videos.find(\r\n                (playlistVideo) => playlistVideo === action.payload.videoId)\r\n                ? playlistItem.videos.filter(\r\n                    (playlistVideo) => playlistVideo !== action.payload)\r\n                : [...playlistItem.videos, action.payload],\r\n            };\r\n          }\r\n          return playlistItem;\r\n        }),  */\n\n      };\n\n    case \"REMOVE_FROM_PLAYLIST\":\n      const removeUpdatePlaylist = state.playList.map(element => {\n        if (element._id === action.payload._id) {\n          return { ...element,\n            playlistvideo: action.payload.playlistvideo\n          };\n        } else {\n          return element;\n        }\n      });\n      return { ...state,\n        playList: removeUpdatePlaylist\n        /* playList: state.playList.map((playlistItem) => {\r\n          if (playlistItem.id === action.playlistId) {\r\n            return {\r\n              ...playlistItem,\r\n              videos: playlistItem.videos.filter(\r\n                (playlistVideo) => playlistVideo !== action.payload)\r\n            };\r\n          }\r\n          return playlistItem;\r\n        }),  */\n\n      };\n\n    case \"DELETE_PLAYLIST\":\n      console.log(\"state.playlist\", state.playList);\n      console.log(\"action.pyayload\", action.payload);\n      const deletePlaylist = state.playList.map(element => {\n        if (element._id === action.payload) {\n          return element;\n        }\n\n        return element;\n      });\n      return { ...state,\n        playList: deletePlaylist //playList: state.playList.filter((playlistitem) => playlistitem._id === action.payload)\n\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["E:/NeogCampProjects/LevelOneProjects/Video-Library/video-library-app/src/Reducer/playListReducer.js"],"names":["uuid","playlistReducer","state","action","type","playList","payload","showPlaylistModal","status","videoData","undefined","inputPlaylistBox","console","log","_id","playlistName","playlistvideo","updatePlaylist","map","element","removeUpdatePlaylist","deletePlaylist"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELG,QAAAA,QAAQ,EAACF,MAAM,CAACG;AAFX,OAAP;;AAKF,SAAK,qBAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELK,QAAAA,iBAAiB,EAAE,EACjB,GAAGL,KAAK,CAACK,iBADQ;AAEjBC,UAAAA,MAAM,EAAEN,KAAK,CAACK,iBAAN,CAAwBC,MAAxB,KAAmC,KAAnC,GAA2C,IAA3C,GAAkD,KAFzC;AAGjBC,UAAAA,SAAS,EAAEN,MAAM,CAACG,OAAP,KAAmBI,SAAnB,GAA+B,EAA/B,GAAoCP,MAAM,CAACG;AAHrC;AAFd,OAAP;;AASF,SAAK,mBAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELS,QAAAA,gBAAgB,EAAET,KAAK,CAACS,gBAAN,KAA2B,KAA3B,GAAmC,IAAnC,GAA0C;AAFvD,OAAP;;AAKF,SAAK,kBAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACG,OAAnB;AACA,aAAO,EACL,GAAGJ,KADE;AAELG,QAAAA,QAAQ,EAAE,CAAE,GAAGH,KAAK,CAACG,QAAX,EAAqB;AAACS,UAAAA,GAAG,EAACX,MAAM,CAACG,OAAP,CAAeQ,GAApB;AAAyBC,UAAAA,YAAY,EAACZ,MAAM,CAACG,OAAP,CAAeS,YAArD;AAAmEC,UAAAA,aAAa,EAACb,MAAM,CAACG,OAAP,CAAeU;AAAhG,SAArB;AAFL,OAAP;;AAKF,SAAK,kBAAL;AACI,YAAMC,cAAc,GAAGf,KAAK,CAACG,QAAN,CAAea,GAAf,CAAoBC,OAAD,IACxC;AACE,YAAGA,OAAO,CAACL,GAAR,KAAgBX,MAAM,CAACG,OAAP,CAAeQ,GAAlC,EAAsC;AACpC,iBAAO,EAAC,GAAGK,OAAJ;AAAYH,YAAAA,aAAa,EAACb,MAAM,CAACG,OAAP,CAAeU;AAAzC,WAAP;AACD,SAFD,MAEM;AACJ,iBAAOG,OAAP;AACD;AACF,OAPoB,CAAvB;AASF,aAAO,EACL,GAAGjB,KADE;AAELG,QAAAA,QAAQ,EAACY;AACT;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAfa,OAAP;;AAkBF,SAAK,sBAAL;AACE,YAAMG,oBAAoB,GAAGlB,KAAK,CAACG,QAAN,CAAea,GAAf,CAAoBC,OAAD,IAC5C;AACE,YAAGA,OAAO,CAACL,GAAR,KAAgBX,MAAM,CAACG,OAAP,CAAeQ,GAAlC,EAAsC;AACpC,iBAAO,EAAC,GAAGK,OAAJ;AAAYH,YAAAA,aAAa,EAACb,MAAM,CAACG,OAAP,CAAeU;AAAzC,WAAP;AACD,SAFD,MAEM;AACJ,iBAAOG,OAAP;AACD;AACF,OAPwB,CAA7B;AAQA,aAAO,EACL,GAAGjB,KADE;AAELG,QAAAA,QAAQ,EAACe;AACT;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAZa,OAAP;;AAeF,SAAK,iBAAL;AACER,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BX,KAAK,CAACG,QAAnC;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BV,MAAM,CAACG,OAArC;AACA,YAAMe,cAAc,GAAGnB,KAAK,CAACG,QAAN,CAAea,GAAf,CAAoBC,OAAD,IAAa;AACjD,YAAGA,OAAO,CAACL,GAAR,KAAgBX,MAAM,CAACG,OAA1B,EAAkC;AAChC,iBAAOa,OAAP;AACD;;AACD,eAAOA,OAAP;AACD,OALkB,CAAvB;AAMA,aAAO,EACL,GAAGjB,KADE;AAELG,QAAAA,QAAQ,EAACgB,cAFJ,CAGL;;AAHK,OAAP;;AAMF;AACE,aAAOnB,KAAP;AAlGJ;AAoGD,CArGM","sourcesContent":["import uuid from \"react-uuid\";\r\nexport const playlistReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INITIAL_LOAD\":\r\n      return {\r\n        ...state,\r\n        playList:action.payload\r\n      }\r\n\r\n    case \"SHOW_PLAYLIST_MODAL\":\r\n      return {\r\n        ...state,\r\n        showPlaylistModal: {\r\n          ...state.showPlaylistModal,\r\n          status: state.showPlaylistModal.status === false ? true : false,\r\n          videoData: action.payload === undefined ? \"\" : action.payload,\r\n        }\r\n      };\r\n    \r\n    case \"DISPLAY_INPUT_BOX\":\r\n      return {\r\n        ...state,\r\n        inputPlaylistBox: state.inputPlaylistBox === false ? true : false,\r\n      };\r\n\r\n    case \"CREATE_PLAY_LIST\":\r\n      console.log(action.payload); \r\n      return {\r\n        ...state,\r\n        playList: [ ...state.playList, {_id:action.payload._id, playlistName:action.payload.playlistName, playlistvideo:action.payload.playlistvideo} ]\r\n      };\r\n\r\n    case \"SAVE_TO_PLAYLIST\":\r\n        const updatePlaylist = state.playList.map((element) => \r\n          {\r\n            if(element._id === action.payload._id){\r\n              return {...element,playlistvideo:action.payload.playlistvideo}\r\n            } else{\r\n              return element;\r\n            }\r\n          }\r\n        )\r\n      return {\r\n        ...state,\r\n        playList:updatePlaylist\r\n        /* playList: state.playList.map((playlistItem) => {\r\n          if (playlistItem.id === action.playlistId) {\r\n            return {\r\n              ...playlistItem,\r\n              videos: playlistItem.videos.find(\r\n                (playlistVideo) => playlistVideo === action.payload.videoId)\r\n                ? playlistItem.videos.filter(\r\n                    (playlistVideo) => playlistVideo !== action.payload)\r\n                : [...playlistItem.videos, action.payload],\r\n            };\r\n          }\r\n          return playlistItem;\r\n        }),  */\r\n      };\r\n\r\n    case \"REMOVE_FROM_PLAYLIST\":\r\n      const removeUpdatePlaylist = state.playList.map((element) => \r\n          {\r\n            if(element._id === action.payload._id){\r\n              return {...element,playlistvideo:action.payload.playlistvideo}\r\n            } else{\r\n              return element;\r\n            }\r\n          })\r\n      return {\r\n        ...state,\r\n        playList:removeUpdatePlaylist\r\n        /* playList: state.playList.map((playlistItem) => {\r\n          if (playlistItem.id === action.playlistId) {\r\n            return {\r\n              ...playlistItem,\r\n              videos: playlistItem.videos.filter(\r\n                (playlistVideo) => playlistVideo !== action.payload)\r\n            };\r\n          }\r\n          return playlistItem;\r\n        }),  */\r\n      };\r\n\r\n    case \"DELETE_PLAYLIST\":\r\n      console.log(\"state.playlist\",state.playList);\r\n      console.log(\"action.pyayload\",action.payload);\r\n      const deletePlaylist = state.playList.map((element) => {\r\n            if(element._id === action.payload){\r\n              return element\r\n            }\r\n            return element\r\n          })\r\n      return {\r\n        ...state,\r\n        playList:deletePlaylist\r\n        //playList: state.playList.filter((playlistitem) => playlistitem._id === action.payload)\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}
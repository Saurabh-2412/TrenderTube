{"ast":null,"code":"var _jsxFileName = \"E:\\\\NeogCampProjects\\\\LevelOneProjects\\\\Video-Library\\\\video-library-app\\\\src\\\\Component\\\\PlayList\\\\PlaylistModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { usePlaylist } from \"../../Contexter/playListContext\";\nimport axios from \"axios\";\nimport \"../../App.css\";\nimport { useParams } from \"react-router\";\nimport uuid from \"react-uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PlaylistModal = ({\n  VideoData\n}) => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const {\n    playList,\n    playlistId,\n    inputPlaylistBox,\n    showPlaylistModal,\n    dispatchplaylist\n  } = usePlaylist();\n\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      handleOnclick();\n    }\n  };\n  /* \r\n    const playlist = {\r\n      id:uuid(),\r\n      name: text,\r\n      videos: {}\r\n    } */\n  //creating playlist\n\n\n  async function handleOnclick() {\n    dispatchplaylist({\n      type: \"DISPLAY_INPUT_BOX\"\n    });\n\n    if (text !== \"\") {\n      const {\n        data\n      } = await axios.post(\"https://VideoLibraryData.saurabhsharma11.repl.co/v1/playlistVideos\", {\n        playlistName: text\n      }); //console.log(\"created playlist\",data.savedPlaylist);\n\n      dispatchplaylist({\n        type: \"CREATE_PLAY_LIST\",\n        payload: data.savedPlaylist\n      });\n      setText(\"\");\n    }\n  }\n\n  ; //loading playlist\n\n  useEffect(() => {\n    (async function () {\n      const {\n        data\n      } = await axios.get(\"https://VideoLibraryData.saurabhsharma11.repl.co/v1/playlistVideos\"); //console.log(\"initial load\",data)\n\n      dispatchplaylist({\n        type: \"INITIAL_LOAD\",\n        payload: data.playlist\n      });\n    })();\n  }, []);\n\n  async function handlePlaylistCheckbox(e, item) {\n    let listId = e.target.id;\n\n    if (e.target.checked === true) {\n      const {\n        data\n      } = await axios.post(`https://VideoLibraryData.saurabhsharma11.repl.co/v1/playlistVideos/${item._id}`, {\n        playlistVideoItem: VideoData.videoId,\n        action: \"push\"\n      });\n      dispatchplaylist({\n        type: \"SAVE_TO_PLAYLIST\",\n        payload: data.updatedPlaylist\n      });\n      dispatchplaylist({\n        type: \"SHOW_PLAYLIST_MODAL\"\n      });\n    } else {\n      const {\n        data\n      } = await axios.post(`https://VideoLibraryData.saurabhsharma11.repl.co/v1/playlistVideos/${item._id}`, {\n        playlistVideoItem: VideoData.videoId,\n        action: \"pull\"\n      });\n      dispatchplaylist({\n        type: \"REMOVE_FROM_PLAYLIST\",\n        payload: data.updatedPlaylist\n      });\n      dispatchplaylist({\n        type: \"SHOW_PLAYLIST_MODAL\"\n      });\n    }\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `modal ${showPlaylistModal.status === false ? \"modal-hide\" : \"modal-show\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal--window\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"modal--title\",\n        children: [\"Playlist\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"modal--icon\",\n          onClick: () => dispatchplaylist({\n            type: \"SHOW_PLAYLIST_MODAL\"\n          }),\n          children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n            name: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal--content\",\n        children: [inputPlaylistBox && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal--input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Playlist Name\",\n            className: \"modal--input-box\",\n            onChange: event => setText(event.target.value),\n            onKeyPress: event => handleKeyPress(event)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary\",\n            onClick: handleOnclick,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"playlist-checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"select-all\",\n          children: \"select-all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 19\n        }, this), playList.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"playlist-names\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: \"playlist-item\",\n                className: \"playlist-checkbox\",\n                id: item._id,\n                checked: item.playlistvideo.some(playlistVideo => playlistVideo === VideoData.videoId) ? true : false,\n                onChange: e => handlePlaylistCheckbox(e, item)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: item._id,\n                children: item.playlistName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 29\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 23\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal--buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: () => dispatchplaylist({\n            type: \"DISPLAY_INPUT_BOX\"\n          }),\n          children: \"New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }, this);\n};\n\n_s(PlaylistModal, \"RslfJitWW/W4/mmgdeyruCi9Mjw=\", false, function () {\n  return [usePlaylist];\n});\n\n_c = PlaylistModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaylistModal\");","map":{"version":3,"sources":["E:/NeogCampProjects/LevelOneProjects/Video-Library/video-library-app/src/Component/PlayList/PlaylistModal.js"],"names":["React","useState","useEffect","usePlaylist","axios","useParams","uuid","PlaylistModal","VideoData","text","setText","playList","playlistId","inputPlaylistBox","showPlaylistModal","dispatchplaylist","handleKeyPress","event","key","handleOnclick","type","data","post","playlistName","payload","savedPlaylist","get","playlist","handlePlaylistCheckbox","e","item","listId","target","id","checked","_id","playlistVideoItem","videoId","action","updatedPlaylist","status","value","map","playlistvideo","some","playlistVideo"],"mappings":"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","sourcesContent":["import React,{ useState,useEffect } from \"react\";\r\nimport { usePlaylist } from \"../../Contexter/playListContext\";\r\nimport axios from \"axios\";\r\nimport \"../../App.css\";\r\nimport { useParams } from \"react-router\";\r\nimport uuid from \"react-uuid\";\r\n\r\nexport const PlaylistModal = ({ VideoData }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const {\r\n    playList,\r\n    playlistId,\r\n    inputPlaylistBox,\r\n    showPlaylistModal,\r\n    dispatchplaylist,\r\n  } = usePlaylist();\r\n  \r\n  const handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      handleOnclick();\r\n    }\r\n  };\r\n/* \r\n  const playlist = {\r\n    id:uuid(),\r\n    name: text,\r\n    videos: {}\r\n  } */\r\n\r\n  //creating playlist\r\n  async function handleOnclick() {\r\n    dispatchplaylist({ type: \"DISPLAY_INPUT_BOX\" });\r\n    if(text !== \"\"){\r\n      const { data } = await axios.post(\r\n        \"https://VideoLibraryData.saurabhsharma11.repl.co/v1/playlistVideos\",{playlistName:text}\r\n      );\r\n      //console.log(\"created playlist\",data.savedPlaylist);\r\n      dispatchplaylist({ type: \"CREATE_PLAY_LIST\", payload: data.savedPlaylist });\r\n      setText(\"\");\r\n    }\r\n  };\r\n\r\n  //loading playlist\r\n  useEffect(() => {\r\n    (async function () {\r\n      const { data } = await axios.get(\r\n        \"https://VideoLibraryData.saurabhsharma11.repl.co/v1/playlistVideos\"\r\n      );\r\n      //console.log(\"initial load\",data)\r\n      dispatchplaylist({ type: \"INITIAL_LOAD\", payload: data.playlist });\r\n    })();\r\n  },[]);\r\n\r\n  async function handlePlaylistCheckbox(e,item) {\r\n    let listId = e.target.id;\r\n    if (e.target.checked === true) {\r\n      const { data } = await axios.post(\r\n        `https://VideoLibraryData.saurabhsharma11.repl.co/v1/playlistVideos/${item._id}`,\r\n        {playlistVideoItem:VideoData.videoId,action:\"push\"});\r\n      dispatchplaylist({type: \"SAVE_TO_PLAYLIST\",payload: data.updatedPlaylist});\r\n      dispatchplaylist({ type: \"SHOW_PLAYLIST_MODAL\" })\r\n    } else {\r\n      const { data } = await axios.post(\r\n        `https://VideoLibraryData.saurabhsharma11.repl.co/v1/playlistVideos/${item._id}`,\r\n        {playlistVideoItem:VideoData.videoId,action:\"pull\"});\r\n      dispatchplaylist({type: \"REMOVE_FROM_PLAYLIST\", payload: data.updatedPlaylist});\r\n      dispatchplaylist({ type: \"SHOW_PLAYLIST_MODAL\" })\r\n    }\r\n  };\r\n\r\n  return (\r\n      <div className={`modal ${showPlaylistModal.status === false ? \"modal-hide\" : \"modal-show\"}`}>\r\n          <div className=\"modal--window\">\r\n              <h1 className=\"modal--title\">Playlist\r\n                  <span className=\"modal--icon\"\r\n                      onClick={() => dispatchplaylist({ type: \"SHOW_PLAYLIST_MODAL\" })}>\r\n                      <ion-icon name=\"close\"></ion-icon>\r\n                  </span>\r\n              </h1>\r\n              {/** playlist creation */}\r\n              <div className=\"modal--content\">\r\n                  {inputPlaylistBox && (\r\n                      <div className=\"modal--input\">\r\n                          <input\r\n                              type=\"text\"\r\n                              placeholder=\"Enter Playlist Name\"\r\n                              className=\"modal--input-box\"\r\n                              onChange={(event) => setText(event.target.value)}\r\n                              onKeyPress={(event) => handleKeyPress(event)}\r\n                          />\r\n                          <button\r\n                              className=\"btn btn-outline-secondary\"\r\n                              onClick={handleOnclick}>\r\n                              Create\r\n                          </button>\r\n                      </div>\r\n                  )}\r\n                  {/** playlist checkbox */}\r\n                  <input \r\n                    type=\"checkbox\"\r\n                    className=\"playlist-checkbox\"\r\n                  />\r\n                  <label htmlFor=\"select-all\">select-all</label>\r\n                  {playList.map((item) => {\r\n                    return (\r\n                      <div>\r\n                        <div key={item._id} className=\"playlist-names\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              name=\"playlist-item\"\r\n                              className=\"playlist-checkbox\"\r\n                              id={item._id}\r\n                              checked={\r\n                                item.playlistvideo.some(\r\n                                  (playlistVideo) => playlistVideo === VideoData.videoId\r\n                                )\r\n                                  ? true\r\n                                  : false\r\n                              }\r\n                              onChange={(e) => handlePlaylistCheckbox(e,item)}\r\n                            />\r\n                            <label htmlFor={item._id}>{item.playlistName}</label>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n\r\n              <div className=\"modal--buttons\">\r\n                  <button className=\"btn btn-secondary\"\r\n                      onClick={() => dispatchplaylist({ type: \"DISPLAY_INPUT_BOX\" })}>\r\n                      New\r\n                  </button>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}
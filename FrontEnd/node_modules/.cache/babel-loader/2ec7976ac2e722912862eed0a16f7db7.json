{"ast":null,"code":"var _jsxFileName = \"E:\\\\NeogCampProjects\\\\LevelOneProjects\\\\Video-Library\\\\video-library-app\\\\src\\\\Component\\\\PlayList\\\\PlaylistModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useAuth } from \"../../Contexter/AuthContext\";\nimport { usePlaylist } from \"../../Contexter/playListContext\";\nimport axios from \"axios\";\nimport \"../../App.css\";\nimport { PlaylistHeader } from \"./PlaylistHeader\";\nimport { CreatePlaylistInput } from \"./CreatePlaylistInput\";\nimport { CreatePlaylist } from \"./CreatePlaylist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PlaylistModal = ({\n  VideoData\n}) => {\n  _s();\n\n  const {\n    token\n  } = useAuth();\n  const {\n    playList,\n    showPlaylistModal,\n    dispatchplaylist\n  } = usePlaylist(); //loading playlist\n\n  axios.interceptors.request.use(config => {\n    config.headers.authorization = token;\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n  useEffect(() => {\n    (async function () {\n      const {\n        data\n      } = await axios.get(\"https://VideoLibraryData.saurabhsharma11.repl.co/v1/playlistVideos\"); //console.log(\"initial load\",data)\n\n      dispatchplaylist({\n        type: \"INITIAL_LOAD\",\n        payload: data.playlist\n      });\n    })();\n  }, [dispatchplaylist]);\n\n  async function handlePlaylistCheckbox(e, item) {\n    //let listId = e.target.id;\n    if (e.target.checked === true) {\n      const {\n        data\n      } = await axios.post(`https://VideoLibraryData.saurabhsharma11.repl.co/v1/playlistVideos/${item._id}`, {\n        playlistVideoItem: VideoData.videoId,\n        action: \"push\"\n      });\n      dispatchplaylist({\n        type: \"SAVE_TO_PLAYLIST\",\n        payload: data.updatedPlaylist\n      }); //dispatchplaylist({ type: \"SHOW_PLAYLIST_MODAL\" })\n    } else {\n      const {\n        data\n      } = await axios.post(`https://VideoLibraryData.saurabhsharma11.repl.co/v1/playlistVideos/${item._id}`, {\n        playlistVideoItem: VideoData.videoId,\n        action: \"pull\"\n      });\n      dispatchplaylist({\n        type: \"REMOVE_FROM_PLAYLIST\",\n        payload: data.updatedPlaylist\n      }); //dispatchplaylist({ type: \"SHOW_PLAYLIST_MODAL\" })\n    }\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `modal ${showPlaylistModal.status === false ? \"modal-hide\" : \"modal-show\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal--window\",\n      children: [/*#__PURE__*/_jsxDEV(PlaylistHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal--content\",\n        children: [/*#__PURE__*/_jsxDEV(CreatePlaylist, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), playList.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"playlist-names\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: \"playlist-item\",\n                className: \"playlist-checkbox\",\n                id: item._id,\n                checked: item.playlistvideo.some(playlistVideo => playlistVideo === VideoData.videoId) ? true : false,\n                onChange: e => handlePlaylistCheckbox(e, item)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: item._id,\n                children: item.playlistName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreatePlaylistInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PlaylistModal, \"Sf2+RQCUAqIy/eHoEKDuZruiEcI=\", false, function () {\n  return [useAuth, usePlaylist];\n});\n\n_c = PlaylistModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaylistModal\");","map":{"version":3,"sources":["E:/NeogCampProjects/LevelOneProjects/Video-Library/video-library-app/src/Component/PlayList/PlaylistModal.js"],"names":["React","useEffect","useAuth","usePlaylist","axios","PlaylistHeader","CreatePlaylistInput","CreatePlaylist","PlaylistModal","VideoData","token","playList","showPlaylistModal","dispatchplaylist","interceptors","request","use","config","headers","authorization","error","Promise","reject","data","get","type","payload","playlist","handlePlaylistCheckbox","e","item","target","checked","post","_id","playlistVideoItem","videoId","action","updatedPlaylist","status","map","playlistvideo","some","playlistVideo","playlistName"],"mappings":"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","sourcesContent":["import React,{ useEffect } from \"react\";\r\nimport { useAuth } from \"../../Contexter/AuthContext\";\r\nimport { usePlaylist } from \"../../Contexter/playListContext\";\r\nimport axios from \"axios\";\r\nimport \"../../App.css\";\r\nimport { PlaylistHeader } from \"./PlaylistHeader\";\r\nimport { CreatePlaylistInput } from \"./CreatePlaylistInput\";\r\nimport { CreatePlaylist } from \"./CreatePlaylist\";\r\n\r\nexport const PlaylistModal = ({ VideoData }) => {\r\n  const { token } = useAuth();\r\n  const {\r\n    playList,\r\n    showPlaylistModal,\r\n    dispatchplaylist,\r\n  } = usePlaylist();\r\n  \r\n  //loading playlist\r\n  axios.interceptors.request.use(\r\n    config => {\r\n      config.headers.authorization = token;\r\n      return config;\r\n    },\r\n    error => {\r\n      return Promise.reject(error);\r\n    }\r\n  )\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      const { data } = await axios.get(\r\n        \"https://VideoLibraryData.saurabhsharma11.repl.co/v1/playlistVideos\"\r\n      );\r\n      //console.log(\"initial load\",data)\r\n      dispatchplaylist({ type: \"INITIAL_LOAD\", payload: data.playlist });\r\n    })();\r\n  },[dispatchplaylist]);\r\n\r\n  async function handlePlaylistCheckbox(e,item) {\r\n    //let listId = e.target.id;\r\n    if (e.target.checked === true) {\r\n      const { data } = await axios.post(\r\n        `https://VideoLibraryData.saurabhsharma11.repl.co/v1/playlistVideos/${item._id}`,\r\n        {playlistVideoItem:VideoData.videoId,action:\"push\"});\r\n      dispatchplaylist({type: \"SAVE_TO_PLAYLIST\",payload: data.updatedPlaylist});\r\n      //dispatchplaylist({ type: \"SHOW_PLAYLIST_MODAL\" })\r\n    } else {\r\n      const { data } = await axios.post(\r\n        `https://VideoLibraryData.saurabhsharma11.repl.co/v1/playlistVideos/${item._id}`,\r\n        {playlistVideoItem:VideoData.videoId,action:\"pull\"});\r\n      dispatchplaylist({type: \"REMOVE_FROM_PLAYLIST\", payload: data.updatedPlaylist});\r\n      //dispatchplaylist({ type: \"SHOW_PLAYLIST_MODAL\" })\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`modal ${showPlaylistModal.status === false ? \"modal-hide\" : \"modal-show\"}`}>\r\n      <div className=\"modal--window\">\r\n        {/** playlist header */}\r\n        <PlaylistHeader/>\r\n          \r\n        <div className=\"modal--content\">\r\n          {/** playlist creation */}\r\n          <CreatePlaylist/>\r\n\r\n          {/** playlist checkbox */}\r\n          {playList.map((item) => {\r\n            return (\r\n              <div>\r\n                <div key={item._id} className=\"playlist-names\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"playlist-item\"\r\n                      className=\"playlist-checkbox\"\r\n                      id={item._id}\r\n                      checked={\r\n                        item.playlistvideo.some(\r\n                          (playlistVideo) => playlistVideo === VideoData.videoId\r\n                        )\r\n                          ? true\r\n                          : false\r\n                      }\r\n                      onChange={(e) => handlePlaylistCheckbox(e,item)}\r\n                    />\r\n                    <label htmlFor={item._id}>{item.playlistName}</label>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n          \r\n        {/** Naming playlist */}\r\n        <CreatePlaylistInput/>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}